name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch:
          - x64
          - arm64
        node-version:
          - node18
        os:
          - linux
          - macos
          - win

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Run build
        run: |
          npm install
          npm run build

      - name: Package Node.js binary with pkg
        id: pkg-action
        uses: ./.github/actions/pkg-action
        with:
          entrypoint: .
          arch: ${{ matrix.arch }}
          node-version: ${{ matrix.node-version }}
          os: ${{ matrix.os }}

  release:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download binaries
        id: download
        uses: actions/download-artifact@v3
        with:
          path: binaries


      - name: deubg ls binaries
        shell: bash
        run: |
          ls -la ${{steps.download.outputs.download-path}}/*

      - name: Prepare files for release
        run: |
          mkdir release_assets
          cd binaries
          for dir in */; do
            file_name=$(basename "${dir}" | cut -d'-' -f1-4)
            zip -j "../release_assets/${file_name}.zip" "${dir}"*
          done
          cd ..

      - name: Extract tag name
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |
            release_assets/*.zip
          name: Release ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ github.ref }}
